import axios from "../../api/axios.news";
import React, { useEffect, useState } from "react";
import styles from "../../styles/allNews.module.sass";
import Link from "next/link";
import Head from "next/head";
import Masonry from "react-masonry-css";
import Loader from "../../components/Loader/Loader";
import Error from "../../components/Error/Error";

export default function allNews() {
  const [postWithImage, setPostWithImage] = useState(null);
  const [usualPost, setUsualPost] = useState(null);
  const [addNews, setAddNews] = useState(10);
  useEffect(() => {
    const getLastNews = async () => {
      try {
        const res = await axios.get(
          `/news-id?sort=publishedAt:DESC&pagination[pageSize]=${addNews}&populate=image`
        );
        if (!res.data) {
          throw new Error();
        }
        let usualPostCopy = res.data.data;
        let num = Math.floor((usualPostCopy.length / 100) * 30);
        let postWithImageCopy = res.data.data.splice(0, num);
        setPostWithImage([...postWithImageCopy]);
        setUsualPost([...usualPostCopy]);
      } catch (Error) {
        setPostWithImage("Error");
        setUsualPost("Error");
      }
    };
    getLastNews();
  }, [addNews]);
  if (usualPost && postWithImage) {
    if ((usualPost === "Error", postWithImage === "Error")) {
      return <Error />;
    } else {
      return (
        <>
          <Head>
            <title>Все Новости</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
          </Head>
          <header className={styles.allNews__container}>
            <h2 className={styles.allNews__title}>Все Новости</h2>
            <main className={styles.content}>
              <ul className={styles.usualPost__list}>
                {usualPost.map(({ postDescription, postDate, id }) => {
                  return (
                    <Link key={id} href={`/allNews/${id}`}>
                      <li className={styles.usualPost__item}>
                        <span className={styles.cartData}>{postDate}</span>
                        <p>{postDescription}</p>
                      </li>
                    </Link>
                  );
                })}
              </ul>
              <Masonry
                breakpointCols={2}
                className={styles.postWithImage__list}
                columnClassName={styles.myMasonryGrid_column}
              >
                {postWithImage.map(
                  ({ postDescription, image, id, className }) => {
                    return (
                      <Link key={id} href={`/allNews/${id}`}>
                        <li
                          className={styles.postWithImage__item}
                          id={className}
                        >
                          <img src={image.url} alt={image.name} />
                          <div className={styles.postWithImage__content}>
                            <p>{postDescription}</p>
                          </div>
                        </li>
                      </Link>
                    );
                  }
                )}
              </Masonry>
            </main>
            <button
              className={styles.addMoreNews__btn}
              onClick={() => setAddNews(addNews + 5)}
            >
              Добавить еще
            </button>
          </header>
        </>
      );
    }
  } else {
    return <Loader />;
  }
}
